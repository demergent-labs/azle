name: Setup dfx
description: 'Sets up dfx by detecting version from package.json and installing it. (Note: DFX must be installed before `npm install` because the azle installation process requires dfx)'
outputs:
    dfx-version:
        description: 'The version of dfx that was installed'
        value: ${{ steps.get-dfx-version.outputs.dfx-version }}
runs:
    using: composite
    steps:
        - id: get-dfx-version
          run: |
              DFX_VERSION=$(jq -r '.azle.globalDependencies.dfx // error("dfx version not found")' "package.json")
              echo "dfx-version=${DFX_VERSION}" >> "$GITHUB_OUTPUT"
          shell: bash

        # Install dfx (Note: dfx must be installed before `npx azle` because the azle installation process requires dfx)
        - name: Install dfx
          uses: ./.github/actions/retry_command
          with:
              command: src/stable/build/commands/dev/setup/install_dfx.sh "${{ steps.get-dfx-version.outputs.dfx-version }}"

        - name: Add dfx to PATH
          run: |
              if [[ "$OSTYPE" == "darwin"* ]]; then
                  # macOS
                  echo "$HOME/Library/Application Support/org.dfinity.dfx/bin" >> $GITHUB_PATH
              else
                  # Linux and others
                  echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
              fi
          shell: bash
