name: Commit and Push Changes
description: 'Commits changes and pushes to a branch using GitHub App token for signed commits'

inputs:
    branch-name:
        description: 'Name of the branch to push to'
        required: true
    create-branch:
        description: 'Whether to create the branch if it does not exist'
        required: false
        default: 'false'
    commit-message:
        description: 'Commit message'
        required: true
    add-files:
        description: 'File pattern to git add. Defaults to "--all"'
        required: false
        default: '--all'
    token:
        description: 'GitHub App token'
        required: true

runs:
    using: composite
    steps:
        - name: Commit and push with App token
          shell: bash
          env:
              GITHUB_TOKEN: ${{ inputs.token }}
          run: |
              REPO_OWNER="${{ github.repository_owner }}"
              REPO_NAME="${{ github.event.repository.name }}"
              REPO="$REPO_OWNER/$REPO_NAME"
              BASE_BRANCH="${{ github.ref_name }}"
              TARGET_BRANCH="${{ inputs.branch-name }}"

              # Configure git
              git config user.name "azle-bot[bot]"
              git config user.email "azle-bot[bot]@users.noreply.github.com"

              # Set authenticated remote
              git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

              # Fetch latest
              git fetch origin

              # Handle branch switching/creation
              if [[ "${{ inputs.create-branch }}" == "true" ]]; then
                if git rev-parse "origin/$TARGET_BRANCH" >/dev/null 2>&1; then
                  echo "Branch $TARGET_BRANCH exists, switching to it"
                  git checkout "$TARGET_BRANCH"
                else
                  echo "Creating new branch $TARGET_BRANCH from $BASE_BRANCH"
                  git checkout -b "$TARGET_BRANCH" "origin/$BASE_BRANCH"
                fi
              else
                git checkout "$TARGET_BRANCH"
              fi

              # Add changes
              git add "${{ inputs.add-files }}"

              # Check for changes
              if git diff --cached --quiet; then
                echo "No changes to commit"
                exit 0
              fi

              # Commit
              git commit -m "${{ inputs.commit-message }}"

              # Push
              git push origin "$TARGET_BRANCH"

              echo "Successfully committed and pushed to $TARGET_BRANCH"
