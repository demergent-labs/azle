name: Run Test (Ubuntu and Mac)

on:
    workflow_call:
        inputs:
            directories:
                required: true
                type: string
            exclude-dirs:
                required: false
                type: string
                default: ''
            link-azle:
                required: true
                type: boolean
            run-experimental:
                required: false
                type: boolean
                default: false
            fuzz:
                required: false
                type: boolean
                default: false
            fuzz-call-delay:
                required: false
                type: string
                default: '.1'
            fuzz-time-limit:
                required: false
                type: string
                default: '300'
            operating-system:
                type: string
                description: 'Operating system to run tests on (ubuntu or mac)'
            copy-outside-repo:
                required: false
                type: boolean
                default: false
                description: 'Copy test outside repository to validate external-to-the-azle-repository usage'

jobs:
    get-test-infos:
        name: Get test infos
        runs-on: ubuntu-latest
        outputs:
            test-infos: ${{ steps.get-test-infos.outputs.test-infos }}
        steps:
            - uses: actions/checkout@v4

            - id: get-test-infos
              uses: ./.github/actions/get_test_infos
              with:
                  directories: ${{ inputs.directories }}
                  exclude-dirs: ${{ inputs.exclude-dirs }}

    run-test:
        name: '${{matrix.test.name}} | ${{matrix.test.displayPath}} | ${{matrix.azle_source}} | ${{inputs.operating-system}} | ${{ matrix.location }}'
        needs: get-test-infos
        runs-on: ${{ matrix.os }}
        env:
            ETHEREUM_URL: ${{ secrets.ETHEREUM_URL }}
            AZLE_IDENTITY_STORAGE_MODE: 'plaintext'
            AZLE_END_TO_END_TEST_LINK_AZLE: ${{ matrix.azle_source == 'repo' }}
            AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE: ''
            AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE: ''
            AZLE_IS_RELEASE_BRANCH_PR: ''
            AZLE_IS_FEATURE_BRANCH_PR: ''
            AZLE_IS_FEATURE_BRANCH_DRAFT_PR: ''

        strategy:
            fail-fast: false # We want to see which example tests succeed and which ones fail, we don't want one example test to cancel the rest
            matrix: # spins up one job per combination of test and code source (repo or npm).
                os:
                    - ${{ inputs.operating-system == 'mac' && 'macos-latest' || inputs.operating-system == 'ubuntu' && 'ubuntu-latest' }}
                azle_source:
                    - ${{ inputs.link-azle == true && 'repo' || 'npm' }}
                test: ${{ fromJSON(needs.get-test-infos.outputs.test-infos) }}
                copy-outside-repo: ${{ inputs.copy-outside-repo && fromJSON('[true, false]') || fromJSON('[false]') }}
                include:
                    - copy-outside-repo: true
                      location: 'External'
                    - copy-outside-repo: false
                      location: 'Internal'
        steps:
            - uses: actions/checkout@v4

            - uses: ./.github/actions/determine_workflow_context
              id: set-conditions

            - name: Set condition environment variables
              run: |
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE=${{ steps.set-conditions.outputs.is_main_branch_push_from_feature_merge }}" >> $GITHUB_ENV
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE=${{ steps.set-conditions.outputs.is_main_branch_push_from_release_merge }}" >> $GITHUB_ENV
                  echo "AZLE_IS_RELEASE_BRANCH_PR=${{ steps.set-conditions.outputs.is_release_branch_pr }}" >> $GITHUB_ENV
                  echo "AZLE_IS_FEATURE_BRANCH_PR=${{ steps.set-conditions.outputs.is_feature_branch_pr }}" >> $GITHUB_ENV
                  echo "AZLE_IS_FEATURE_BRANCH_DRAFT_PR=${{ steps.set-conditions.outputs.is_feature_branch_draft_pr }}" >> $GITHUB_ENV

            - name: Print environment variables
              run: |
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE: $AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE"
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE: $AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE"
                  echo "AZLE_IS_RELEASE_BRANCH_PR: $AZLE_IS_RELEASE_BRANCH_PR"
                  echo "AZLE_IS_FEATURE_BRANCH_PR: $AZLE_IS_FEATURE_BRANCH_PR"
                  echo "AZLE_IS_FEATURE_BRANCH_DRAFT_PR: $AZLE_IS_FEATURE_BRANCH_DRAFT_PR"

            - name: Report full path of test
              # Just in case the path isn't obvious from the name, this will remove ambiguity
              run: echo ${{matrix.test.path}}

            - name: Copy test outside repository
              if: ${{ matrix.copy-outside-repo }}
              id: copy-test
              run: |
                  # Create external test directory
                  EXTERNAL_TEST_DIR="../external_test_env
                  echo "Copying test from ${{ matrix.test.path }} to $EXTERNAL_TEST_DIR"

                  # Copy the test directory outside the repo
                  cp -r "${{ matrix.test.path }}" "$EXTERNAL_TEST_DIR"

                  # Copy jest config file to external test directory
                  cp jest.config.dev.js "$EXTERNAL_TEST_DIR/jest.config.js"
                  echo "Copied jest.config.dev.js to external test directory"

                  # Copy TypeScript config file to external test directory
                  cp tsconfig.dev.json "$EXTERNAL_TEST_DIR/tsconfig.json"
                  echo "Copied tsconfig.dev.json to external test directory"

                  # Set the external directory as output
                  echo "external-test-dir=$EXTERNAL_TEST_DIR" >> $GITHUB_OUTPUT
                  echo "Test copied to external directory: $EXTERNAL_TEST_DIR"

            - name: Set working directory
              id: set-working-dir
              run: |
                  if [[ "${{ matrix.copy-outside-repo }}" == "true" ]]; then
                      WORKING_DIR="${{ steps.copy-test.outputs.external-test-dir }}"
                  else
                      WORKING_DIR="${{ matrix.test.path }}"
                  fi
                  echo "working-dir=$WORKING_DIR" >> $GITHUB_OUTPUT
                  echo "Working directory set to: $WORKING_DIR"

            - name: Verify working directory
              run: |
                  echo "Location: ${{ matrix.location }}"
                  echo "Current working directory: $(pwd)"
                  echo "Target working directory: ${{ steps.set-working-dir.outputs.working-dir }}"

            - uses: ./.github/actions/setup_node

            - uses: ./.github/actions/setup_dfx

            - name: Configure MacOS DNS (if needed)
              if: matrix.os == 'macos-latest'
              run: sudo networksetup -setdnsservers Ethernet 9.9.9.9

            - uses: ./.github/actions/retry_command
              name: Install azle dependencies
              with:
                  command: 'npm install'

            - run: npm link
              if: matrix.azle_source == 'repo'

            - run: npm run lint

            - uses: ./.github/actions/retry_command
              name: Install example dependencies
              with:
                  command: 'npm install'
                  working-directory: ${{ steps.set-working-dir.outputs.working-dir }}

            - uses: ./.github/actions/retry_command
              if: ${{ matrix.copy-outside-repo }}
              name: Install example testing dependencies
              with:
                  command: 'npm install jest ts-jest cuzz --save-dev'
                  working-directory: ${{ steps.set-working-dir.outputs.working-dir }}

            - name: Install experimental dependencies for stable api tests if running in experimental mode
              if: ${{ inputs.run-experimental }}
              uses: ./.github/actions/retry_command
              with:
                  command: 'npm install https://github.com/demergent-labs/azle-experimental-deps#d804c0838c50aa4221e50d8d522c86163ea68cdd'
                  working-directory: ${{ steps.set-working-dir.outputs.working-dir }}

            - run: npm link azle
              if: matrix.azle_source == 'repo'
              working-directory: ${{ steps.set-working-dir.outputs.working-dir }}

            - name: Start dfx with artificial delay 0
              if: ${{ steps.set-conditions.outputs.is_feature_branch_pr == 'true' || steps.set-conditions.outputs.is_feature_branch_draft_pr == 'true' || steps.set-conditions.outputs.is_main_branch_push_from_feature_merge == 'true' }}
              working-directory: ${{ steps.set-working-dir.outputs.working-dir }}
              run: dfx start --clean --background --artificial-delay 0

            - name: Start dfx
              if: ${{ steps.set-conditions.outputs.is_release_branch_pr == 'true' || steps.set-conditions.outputs.is_main_branch_push_from_release_merge == 'true' }}
              working-directory: ${{ steps.set-working-dir.outputs.working-dir }}
              run: dfx start --clean --background

            - name: Test configuration
              id: test-configuration
              run: |
                  RUNS=1

                  if [[ "${{ steps.set-conditions.outputs.is_main_branch_push_from_feature_merge }}" == "true" ]]; then
                      RUNS=5
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_main_branch_push_from_release_merge }}" == "true" ]]; then
                      RUNS=100
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_release_branch_pr }}" == "true" ]]; then
                      RUNS=10
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_feature_branch_pr }}" == "true" ]]; then
                      RUNS=5
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_feature_branch_draft_pr }}" == "true" ]]; then
                      RUNS=1
                  fi

                  echo "Running tests $RUNS times"

                  echo "runs=$RUNS" >> $GITHUB_OUTPUT

            - name: Run tests
              run: |
                  npm test && echo "Current working directory of tests: $(pwd)"
              working-directory: ${{ steps.set-working-dir.outputs.working-dir }}
              shell: bash -l {0}
              env:
                  AZLE_EXPERIMENTAL: ${{ inputs.run-experimental }}
                  AZLE_FUZZ: ${{ inputs.fuzz }}
                  AZLE_FUZZ_CALL_DELAY: ${{ inputs.fuzz-call-delay }}
                  AZLE_FUZZ_TIME_LIMIT: ${{ inputs.fuzz-time-limit }}
                  AZLE_RECORD_ACTIONS: ${{ !inputs.fuzz }}
                  AZLE_PROPTEST_NUM_RUNS: ${{ steps.test-configuration.outputs.runs }}
                  AZLE_PROPTEST_VERBOSE: true
                  AZLE_RUNNING_IN_MAC: ${{ matrix.os == 'macos-latest' }}
                  AZLE_RUNNING_IN_GITHUB_ACTIONS: true
