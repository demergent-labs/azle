name: Run Test

on:
    workflow_call:
        inputs:
            directories:
                required: true
                type: string
            exclude-dirs:
                required: false
                type: string
                default: ''
            azle-source-mode:
                required: false
                type: string
                default: 'link'
            run-experimental:
                required: false
                type: boolean
                default: false
            fuzz:
                required: false
                type: boolean
                default: false
            call-delay:
                required: false
                type: string
                default: '.1'
            time-limit:
                required: false
                type: string
                default: '300'

jobs:
    get-test-infos:
        name: Get test infos
        runs-on: ubuntu-latest
        outputs:
            test-infos: ${{ steps.get-test-infos.outputs.test-infos }}
        steps:
            - uses: actions/checkout@v4

            - id: get-test-infos
              uses: ./.github/actions/get_test_infos
              with:
                  directories: ${{ inputs.directories }}
                  exclude-dirs: ${{ inputs.exclude-dirs }}

    run-test:
        name: '${{matrix.test.name}} | ${{matrix.test.displayPath}} | ${{matrix.azle_source}}'
        needs: get-test-infos
        runs-on: ${{ matrix.os }}
        env:
            ETHEREUM_URL: ${{ secrets.ETHEREUM_URL }}
            AZLE_IDENTITY_STORAGE_MODE: 'plaintext'
            AZLE_END_TO_END_TEST_LINK_AZLE: ${{ matrix.azle_source == 'link' }}
            AZLE_END_TO_END_TEST_PACK_AZLE: ${{ matrix.azle_source == 'pack' }}
            AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE: ''
            AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE: ''
            AZLE_IS_RELEASE_BRANCH_PR: ''
            AZLE_IS_FEATURE_BRANCH_PR: ''
            AZLE_IS_FEATURE_BRANCH_DRAFT_PR: ''

        strategy:
            fail-fast: false # We want to see which example tests succeed and which ones fail, we don't want one example test to cancel the rest
            matrix: # spins up one job per combination of test and the chosen azle source mode.
                # os: [macos-latest, ubuntu-latest]
                os: [ubuntu-latest]
                azle_source:
                    - ${{ inputs.azle-source-mode }}
                test: ${{ fromJSON(needs.get-test-infos.outputs.test-infos) }}
        steps:
            - uses: actions/checkout@v4

            - uses: ./.github/actions/determine_workflow_context
              id: set-conditions

            - name: Set condition environment variables
              run: |
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE=${{ steps.set-conditions.outputs.is_main_branch_push_from_feature_merge }}" >> $GITHUB_ENV
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE=${{ steps.set-conditions.outputs.is_main_branch_push_from_release_merge }}" >> $GITHUB_ENV
                  echo "AZLE_IS_RELEASE_BRANCH_PR=${{ steps.set-conditions.outputs.is_release_branch_pr }}" >> $GITHUB_ENV
                  echo "AZLE_IS_FEATURE_BRANCH_PR=${{ steps.set-conditions.outputs.is_feature_branch_pr }}" >> $GITHUB_ENV
                  echo "AZLE_IS_FEATURE_BRANCH_DRAFT_PR=${{ steps.set-conditions.outputs.is_feature_branch_draft_pr }}" >> $GITHUB_ENV

            - name: Print environment variables
              run: |
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE: $AZLE_IS_MAIN_BRANCH_PUSH_FROM_FEATURE_MERGE"
                  echo "AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE: $AZLE_IS_MAIN_BRANCH_PUSH_FROM_RELEASE_MERGE"
                  echo "AZLE_IS_RELEASE_BRANCH_PR: $AZLE_IS_RELEASE_BRANCH_PR"
                  echo "AZLE_IS_FEATURE_BRANCH_PR: $AZLE_IS_FEATURE_BRANCH_PR"
                  echo "AZLE_IS_FEATURE_BRANCH_DRAFT_PR: $AZLE_IS_FEATURE_BRANCH_DRAFT_PR"

            - name: Report full path of test
              # Just in case the path isn't obvious from the name, this will remove ambiguity
              run: echo ${{matrix.test.path}}

            - uses: ./.github/actions/setup_node

            - uses: ./.github/actions/setup_dfx

            - name: Configure MacOS DNS (if needed)
              if: matrix.os == 'macos-latest'
              run: sudo networksetup -setdnsservers Ethernet 9.9.9.9

            - uses: ./.github/actions/retry_command
              with:
                  command: 'npm install'

            - name: Link Azle source
              if: matrix.azle_source == 'link'
              run: npm link

            - run: npm run lint

            - name: Pack Azle source
              if: matrix.azle_source == 'pack'
              id: pack_azle
              run: |
                  # Ensure the dist directory exists
                  mkdir -p "${{ github.workspace }}/dist"

                  # Pack into the dist directory and capture the original filename
                  ORIGINAL_PACKED_FILENAME=$(npm pack --pack-destination "${{ github.workspace }}/dist" | tail -n 1)
                  echo "Original packed filename: ${ORIGINAL_PACKED_FILENAME}"

                  # Define the final target path
                  TARGET_PACKED_FILE_PATH="${{ github.workspace }}/dist/azle.tgz"
                  echo "Target packed file path: ${TARGET_PACKED_FILE_PATH}"

                  # Construct the path to the originally created file
                  ORIGINAL_PACKED_FILE_PATH="${{ github.workspace }}/dist/${ORIGINAL_PACKED_FILENAME}"
                  echo "Original packed file path: ${ORIGINAL_PACKED_FILE_PATH}"

                  # Rename the packed file to the target name
                  mv "${ORIGINAL_PACKED_FILE_PATH}" "${TARGET_PACKED_FILE_PATH}"
                  echo "Renamed packed file to ${TARGET_PACKED_FILE_PATH}"

                  # Output the final absolute path for the installer step
                  echo "packed_file_absolute_path=${TARGET_PACKED_FILE_PATH}" >> $GITHUB_OUTPUT

            - uses: ./.github/actions/retry_command
              with:
                  command: 'npm install'
                  working-directory: ${{ matrix.test.path }}

            - name: Install experimental dependencies for experimental tests
              if: matrix.azle_source == 'link' && ${{ inputs.run-experimental }}
              uses: ./.github/actions/retry_command
              with:
                  command: 'npm install --no-save github:demergent-labs/azle-experimental-deps#34cf2e34958e03cae7bf63f77f86ae682eef8a7c'
                  working-directory: ${{ matrix.test.path }}

            - name: Link Azle source (test dir)
              if: matrix.azle_source == 'link'
              run: npm link azle
              working-directory: ${{ matrix.test.path }}

            - name: Install Azle from packed source for stable
              if: matrix.azle_source == 'pack'
              working-directory: ${{ matrix.test.path }}
              run: |
                  echo "Installing packed file from absolute path: ${{ steps.pack_azle.outputs.packed_file_absolute_path }}"
                  npm install "${{ steps.pack_azle.outputs.packed_file_absolute_path }}" --no-save

            - name: Install Azle from packed source for experimental
              if: matrix.azle_source == 'pack' && ${{ inputs.run-experimental }}
              working-directory: ${{ matrix.test.path }}
              run: |
                  echo "Installing packed file from absolute path: ${{ steps.pack_azle.outputs.packed_file_absolute_path }}"
                  npm install "${{ steps.pack_azle.outputs.packed_file_absolute_path }}" github:demergent-labs/azle-experimental-deps#34cf2e34958e03cae7bf63f77f86ae682eef8a7c --no-save

            - name: Start dfx with artificial delay 0
              if: ${{ steps.set-conditions.outputs.is_feature_branch_pr == 'true' || steps.set-conditions.outputs.is_feature_branch_draft_pr == 'true' || steps.set-conditions.outputs.is_main_branch_push_from_feature_merge == 'true' }}
              working-directory: ${{ matrix.test.path }}
              run: dfx start --clean --background --artificial-delay 0

            - name: Start dfx
              if: ${{ steps.set-conditions.outputs.is_release_branch_pr == 'true' || steps.set-conditions.outputs.is_main_branch_push_from_release_merge == 'true' }}
              working-directory: ${{ matrix.test.path }}
              run: dfx start --clean --background

            - name: Test configuration
              id: test-configuration
              run: |
                  RECORD_ACTIONS='true'
                  RUNS=1

                  if [[ "${{ steps.set-conditions.outputs.is_main_branch_push_from_feature_merge }}" == "true" ]]; then
                      RUNS=5
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_main_branch_push_from_release_merge }}" == "true" ]]; then
                      RUNS=100
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_release_branch_pr }}" == "true" ]]; then
                      RECORD_ACTIONS='false'
                      RUNS=10
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_feature_branch_pr }}" == "true" ]]; then
                      RUNS=5
                  fi

                  if [[ "${{ steps.set-conditions.outputs.is_feature_branch_draft_pr }}" == "true" ]]; then
                      RUNS=1
                  fi

                  echo "Running tests $RUNS times"

                  echo "runs=$RUNS" >> $GITHUB_OUTPUT
                  echo "record_actions=$RECORD_ACTIONS" >> $GITHUB_OUTPUT

            - name: Run tests
              run: npm test
              working-directory: ${{ matrix.test.path }}
              shell: bash -l {0}
              env:
                  AZLE_EXPERIMENTAL: ${{ inputs.run-experimental }}
                  AZLE_FUZZ: ${{ inputs.fuzz }}
                  AZLE_FUZZ_CALL_DELAY: ${{ inputs.call-delay }}
                  AZLE_FUZZ_TIME_LIMIT: ${{ inputs.time-limit }}
                  AZLE_RECORD_ACTIONS: ${{ steps.test-configuration.outputs.record_actions }}
                  AZLE_PROPTEST_NUM_RUNS: ${{ steps.test-configuration.outputs.runs }}
                  AZLE_PROPTEST_VERBOSE: true
