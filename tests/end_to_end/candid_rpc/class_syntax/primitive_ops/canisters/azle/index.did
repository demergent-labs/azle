service: () -> {
    blob_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    blob_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    boolean_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    boolean_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    empty: () -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    float32_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    float32_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    float64_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    float64_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int16_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int16_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int32_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int32_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int64_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int64_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int8_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int8_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    int_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat16_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat16_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat32_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat32_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat64_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat64_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat8_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat8_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    nat_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    null_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    null_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    opt_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    opt_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    principal_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    principal_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    record_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    record_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    text_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    text_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    variant_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    variant_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    vec_init_heap: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
    vec_init_stack: (nat32) -> (record {wasm_body_only:nat64; wasm_including_prelude:nat64});
}
