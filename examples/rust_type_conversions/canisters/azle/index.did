type AzleInlineStruct_0de9326b_7e25_4e77_bd6f_c9d6ce2cf3fd = record {
  sub_one : bool;
  sub_two : bool;
};
type AzleInlineStruct_1741b3c1_ab88_4201_a42a_1cfd6dcbc1ce = record {
  one : AzleInlineStruct_5c3305ef_9b67_4b34_a5c4_b2ce22b045e4;
  two : AzleInlineStruct_219aa876_8d34_4850_a231_72f9ccbbd0cd;
  three : AzleInlineStruct_3d8fc7a1_a356_4631_ac7c_a788053020e4;
};
type AzleInlineStruct_184a0942_b37e_4714_8255_f63dde3a6d7f = record {
  one : text;
  two : SimpleRecord;
  three : bool;
};
type AzleInlineStruct_219aa876_8d34_4850_a231_72f9ccbbd0cd = record {
  two_inline : nat16;
};
type AzleInlineStruct_2420a0bb_9199_40d3_8f64_9b6f14d2a4d7 = record {
  thing : text;
};
type AzleInlineStruct_3d8fc7a1_a356_4631_ac7c_a788053020e4 = record {
  three_inline : ComplexRecord;
};
type AzleInlineStruct_5c3305ef_9b67_4b34_a5c4_b2ce22b045e4 = record {
  one_inline : bool;
};
type AzleInlineStruct_5ce3d944_281e_413f_9147_837755ac3305 = record {
  sub_one : bool;
  sub_two : AzleInlineStruct_6d627fd3_3e03_4524_bcb9_568303712ea8;
};
type AzleInlineStruct_6d627fd3_3e03_4524_bcb9_568303712ea8 = record {
  sub_three : bool;
};
type AzleInlineStruct_7424f583_7a50_4aa9_beaa_be0d4b2affe6 = record {
  thing : bool;
};
type AzleInlineStruct_8fd73256_0f43_4b12_92e1_9eb6da126606 = record {
  one : TypeAliasOnlyUsedInline;
};
type AzleInlineStruct_b5b58e5e_25a3_4d95_b971_872ff3550cfd = record {
  one : text;
  two : SimpleRecord;
  three : AzleInlineStruct_0de9326b_7e25_4e77_bd6f_c9d6ce2cf3fd;
  four : AzleInlineStruct_5ce3d944_281e_413f_9147_837755ac3305;
};
type AzleInlineStruct_f1992be6_d573_4f89_809a_143ed96e6295 = record {
  one : text;
  two : SimpleRecord;
};
type AzleInlineStruct_f4b9a45b_e43d_47a8_ada4_19c331b55cae = record {
  one : bool;
  two : nat16;
  three : ComplexRecord;
};
type ComplexRecord = record {
  one : nat16;
  six : AzleInlineStruct_f1992be6_d573_4f89_809a_143ed96e6295;
  two : bool;
  three : bool;
  five : vec SimpleRecord;
  four : vec bool;
  seven : RecordWithoutDirectInlineRecords;
};
type DeepInlineRecords = record {
  one : AzleInlineStruct_7424f583_7a50_4aa9_beaa_be0d4b2affe6;
  six : AzleInlineStruct_f1992be6_d573_4f89_809a_143ed96e6295;
};
type RecordWithoutDirectInlineRecords = record { one : DeepInlineRecords };
type SimpleRecord = record { one : bool; other : vec bool };
type TypeAliasOnlyUsedInline = record { one : bool };
service : {
  complex_record_test : (
      ComplexRecord,
      SimpleRecord,
      bool,
      AzleInlineStruct_184a0942_b37e_4714_8255_f63dde3a6d7f,
      AzleInlineStruct_f4b9a45b_e43d_47a8_ada4_19c331b55cae,
      AzleInlineStruct_b5b58e5e_25a3_4d95_b971_872ff3550cfd,
      AzleInlineStruct_1741b3c1_ab88_4201_a42a_1cfd6dcbc1ce,
      AzleInlineStruct_8fd73256_0f43_4b12_92e1_9eb6da126606,
    ) -> (nat8) query;
  getPrincipals : (vec vec principal) -> ();
  not_so_simple : (
      vec int8,
      int16,
      int32,
      int64,
      nat8,
      nat16,
      nat32,
      nat64,
      vec nat8,
      float32,
      float64,
      principal,
      null,
      AzleInlineStruct_2420a0bb_9199_40d3_8f64_9b6f14d2a4d7,
    ) -> ();
  simple_query : (opt nat64, text, nat, bool) -> (text) query;
}