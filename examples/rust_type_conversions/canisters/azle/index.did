type AzleInline_10174769152289428498 = record {
  sub_one : bool;
  sub_two : AzleInline_12477736162160781291;
};
type AzleInline_10550531413164410119 = record {
  one : bool;
  two : AzleInline_4064619906461566232;
};
type AzleInline_11336909418008909617 = record {
  one : text;
  two : AzleInline_4440350408087292955;
};
type AzleInline_11759017109883458370 = record { one : nat16; two : nat16 };
type AzleInline_11785136007535424815 = record { three_inline : ComplexRecord };
type AzleInline_12477736162160781291 = record { sub_three : bool };
type AzleInline_14062599278484511097 = record {
  one : bool;
  two : bool;
  three : bool;
};
type AzleInline_14090109093491927075 = record {
  one : text;
  two : SimpleRecord;
  three : bool;
};
type AzleInline_14806421258981238475 = record {
  one : text;
  two : SimpleRecord;
  three : AzleInline_6196361535868770603;
  four : AzleInline_10174769152289428498;
};
type AzleInline_15730480668120121283 = record { one : TypeAliasOnlyUsedInline };
type AzleInline_1579767579123437749 = variant { one : text; two; three : bool };
type AzleInline_1805274857099726532 = record { one : text; two : SimpleRecord };
type AzleInline_2079212390168712599 = record {
  one : bool;
  two : nat16;
  three : ComplexRecord;
};
type AzleInline_2474745210287299794 = record { one_inline : bool };
type AzleInline_323333797164242328 = record { two_a_i : nat16 };
type AzleInline_4064619906461566232 = record { thing : text };
type AzleInline_4440350408087292955 = record {
  two_a : AzleInline_323333797164242328;
  two_b : bool;
};
type AzleInline_4502094796870336716 = record {
  one : AzleInline_2474745210287299794;
  two : AzleInline_7603740651129624619;
  three : AzleInline_11785136007535424815;
};
type AzleInline_5243159794805180565 = record { thing : bool };
type AzleInline_6196361535868770603 = record { sub_one : bool; sub_two : bool };
type AzleInline_7603740651129624619 = record { two_inline : nat16 };
type AzleInline_9864422139172514499 = record { one : bool; two : text };
type ComplexRecord = record {
  one : nat16;
  six : AzleInline_1805274857099726532;
  two : bool;
  three : bool;
  five : vec SimpleRecord;
  four : vec bool;
  seven : RecordWithoutDirectInlineRecords;
};
type DeepInlineRecords = record {
  one : AzleInline_5243159794805180565;
  six : AzleInline_1805274857099726532;
};
type Fun = variant { id; cool };
type Good = record { id : text };
type InlineExample = record {
  second_field : AzleInline_10550531413164410119;
  first_field : AzleInline_9864422139172514499;
  third_field : AzleInline_9864422139172514499;
};
type Reaction = variant { Fun : Fun; Great; Fire; Good : Good };
type RecordWithInline = record {
  inline_func : func (text) -> (text) query;
  inline_variant : AzleInline_1579767579123437749;
  inline_record : AzleInline_14062599278484511097;
};
type RecordWithoutDirectInlineRecords = record { one : DeepInlineRecords };
type SimpleRecord = record { one : bool; other : vec bool };
type TypeAliasOnlyUsedInline = record { one : bool };
type VariantWithInline = variant {
  thing;
  inline_func : func (text) -> (text) query;
  inline_variant : AzleInline_1579767579123437749;
  inline_record : AzleInline_14062599278484511097;
};
type Yes = variant { One; Two; Three };
service : () -> {
  complex_record_test : (
      ComplexRecord,
      SimpleRecord,
      bool,
      AzleInline_14090109093491927075,
      AzleInline_2079212390168712599,
      AzleInline_14806421258981238475,
      AzleInline_4502094796870336716,
      AzleInline_15730480668120121283,
    ) -> (nat8) query;
  everything_inline : (
      RecordWithInline,
      VariantWithInline,
      func (
          AzleInline_14062599278484511097,
          AzleInline_1579767579123437749,
          func (text) -> (text) query,
        ) -> (text) query,
    ) -> ();
  in_line : (AzleInline_11759017109883458370) -> (
      AzleInline_11336909418008909617,
    ) query;
  inline_query : (InlineExample) -> () query;
  not_so_simple : (
      vec int8,
      int16,
      int32,
      int64,
      nat8,
      nat16,
      nat32,
      nat64,
      vec nat8,
      float32,
      float64,
      principal,
      null,
      AzleInline_4064619906461566232,
    ) -> ();
  one_variant : (Fun) -> () query;
  simple_query : (opt nat64, text, nat, bool) -> (text) query;
  various_variants : (Yes, Reaction) -> (text) query;
}