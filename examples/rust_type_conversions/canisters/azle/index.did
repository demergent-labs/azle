type AzleInlineStruct_10471270730566901397 = record {
  one : AzleInlineStruct_17566253433733943772;
  two : AzleInlineStruct_18144633059022559442;
  three : AzleInlineStruct_9985188851099086853;
};
type AzleInlineStruct_11853679909254186611 = record {
  sub_one : bool;
  sub_two : bool;
};
type AzleInlineStruct_12063767884913712725 = record { two_a_i : nat16 };
type AzleInlineStruct_12110352749782890712 = record {
  one : bool;
  two : AzleInlineStruct_4539032918099209708;
};
type AzleInlineStruct_13045371363933341172 = record {
  sub_one : bool;
  sub_two : AzleInlineStruct_6251336112683741851;
};
type AzleInlineStruct_13925231082083640634 = record {
  one : TypeAliasOnlyUsedInline;
};
type AzleInlineStruct_14249633442629890157 = record {
  two_a : AzleInlineStruct_12063767884913712725;
  two_b : bool;
};
type AzleInlineStruct_14998262133798222657 = record {
  one : bool;
  two : nat16;
  three : ComplexRecord;
};
type AzleInlineStruct_17501617531842431281 = record {
  one : text;
  two : AzleInlineStruct_14249633442629890157;
};
type AzleInlineStruct_17566253433733943772 = record { one_inline : bool };
type AzleInlineStruct_18144633059022559442 = record { two_inline : nat16 };
type AzleInlineStruct_2606093266956883660 = record {
  one : text;
  two : SimpleRecord;
};
type AzleInlineStruct_2824215216383390224 = record { one : nat16; two : nat16 };
type AzleInlineStruct_4116498861251669119 = record { one : bool; two : text };
type AzleInlineStruct_4157328171470266132 = record { thing : bool };
type AzleInlineStruct_4539032918099209708 = record { thing : text };
type AzleInlineStruct_4698534398752220504 = record {
  one : text;
  two : SimpleRecord;
  three : AzleInlineStruct_11853679909254186611;
  four : AzleInlineStruct_13045371363933341172;
};
type AzleInlineStruct_4849585829580451545 = record {
  one : text;
  two : SimpleRecord;
  three : bool;
};
type AzleInlineStruct_6251336112683741851 = record { sub_three : bool };
type AzleInlineStruct_9985188851099086853 = record {
  three_inline : ComplexRecord;
};
type ComplexRecord = record {
  one : nat16;
  six : AzleInlineStruct_2606093266956883660;
  two : bool;
  three : bool;
  five : vec SimpleRecord;
  four : vec bool;
  seven : RecordWithoutDirectInlineRecords;
};
type DeepInlineRecords = record {
  one : AzleInlineStruct_4157328171470266132;
  six : AzleInlineStruct_2606093266956883660;
};
type Fun = variant { id; cool };
type Good = record { id : text };
type InlineExample = record {
  second_field : AzleInlineStruct_12110352749782890712;
  first_field : AzleInlineStruct_4116498861251669119;
  third_field : AzleInlineStruct_4116498861251669119;
};
type Reaction = variant { Fun : Fun; Great; Fire; Good : Good };
type RecordWithoutDirectInlineRecords = record { one : DeepInlineRecords };
type SimpleRecord = record { one : bool; other : vec bool };
type TypeAliasOnlyUsedInline = record { one : bool };
type Yes = variant { One; Two; Three };
service : () -> {
  complex_record_test : (
      ComplexRecord,
      SimpleRecord,
      bool,
      AzleInlineStruct_4849585829580451545,
      AzleInlineStruct_14998262133798222657,
      AzleInlineStruct_4698534398752220504,
      AzleInlineStruct_10471270730566901397,
      AzleInlineStruct_13925231082083640634,
    ) -> (nat8) query;
  in_line : (AzleInlineStruct_2824215216383390224) -> (
      AzleInlineStruct_17501617531842431281,
    ) query;
  inline_query : (InlineExample) -> () query;
  not_so_simple : (
      vec int8,
      int16,
      int32,
      int64,
      nat8,
      nat16,
      nat32,
      nat64,
      vec nat8,
      float32,
      float64,
      principal,
      null,
      AzleInlineStruct_4539032918099209708,
    ) -> ();
  one_variant : (Fun) -> () query;
  simple_query : (opt nat64, text, nat, bool) -> (text) query;
  various_variants : (Yes, Reaction) -> (text) query;
}